var spark = require('sparkCore');model.Device.methods.check_serial_number = function(param) {	var result = {};	var device = ds.Device(param.deviceID);		if (device) {		result = spark.read_serial_number(device.sparkCoreID);				if (result.success) {			if (result.value !== device.serialNumber) {				result.success = false;				result.message = 'Serial number mismatch';			}		}		else {			result.success = false;			result.message = 'Device unavailable';		}	}	else {		result.success = false;		result.message = 'Serial number error: device not found';	}	return result;};model.Device.methods.check_serial_number.scope = 'public';model.Device.entityMethods.update_status = function(core_list) {	var core, i;	var device = this;	var not_found = true;		if (device.lock()) {		for (i = 0; i < core_list.length; i += 1) {			core = core_list[i];			if (core.id === device.sparkCoreID) {				device.online = core.connected;				device.sparkName = core.name;				device.sparkLastHeard = core.last_heard;				not_found = false;			}		}				if (not_found) {			device.online = false;		}				device.save();		device.unlock();	}};model.Device.entityMethods.update_status.scope = 'public';