model.Prescription.methods.write = function(param) {	var assay, i, prescription, test;	var result = { success: true };	var user = ds.User.find('username === :1', param.username);	if (user === null) {		result.success = false;		result.errorMessage = 'User not found.';		return result;	}		var physician = ds.Physician.find('user.ID === :1', user.ID);	if (physician === null) {		result.success = false;		result.errorMessage = 'You must be a physician to write a prescription.';		return result;	}		var patient = ds.Patient(param.patientID);	if (patient === null) {		result.success = false;		result.errorMessage = 'Invalid patient ID.';		return result;	}		// in production, the following code should be placed in a transaction structure		prescription = ds.Prescription.createEntity();	prescription.physician = physician;	prescription.patient = patient;	prescription.note = param.note;	prescription.prescribedOn = new Date();	prescription.save();		for (i = 0; i < param.tests.length; i += 1) {		assay = ds.Assay(param.tests[i]);		if (assay === null) {			result.success = false;			result.errorMessage = 'Invalid assay ID.';			return result;		}		test = ds.Test.createEntity();		test.prescription = prescription;		test.assay = assay;//		test.physicianInstruction = param.tests[i].physicianInstruction;		test.save();	}		result.testCount = param.tests.length;		return result;};model.Prescription.methods.write.scope = 'public';