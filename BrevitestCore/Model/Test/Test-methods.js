var spark = require('sparkCore');model.Test.methods.start = function(param) {	var result = {};	var practice, prescription, status;	var test = ds.Test(param.testID);	var device = ds.Device(param.deviceID);	var user = ds.User.find('username === :1', param.username);		if (test === null) {		result.success = false;		result.message = 'Test entity not found';		result.testID = param.testID;		return result;	}	else {		prescription = test.prescription;	}		if (device === null) {		result.success = false;		result.message = 'Device entity not found';		result.deviceID = param.deviceID;		return result;	}		if (user === null) {		result.success = false;		result.message = 'User not found';		result.username = param.username;		return result;	}	else {		practice = user.practice;	}		if (device.practice.ID !== practice.ID || prescription.physician.practice.ID !== practice.ID) {		result.success = false;		result.message = 'Practice is not the same for user, device, and test';		result.testPracticeID = prescription.physician.practice.ID;		result.devicePracticeID = device.practice.ID;		result.userPracticeID = practice.ID;		return result;	}		result = model.Device.methods.checkSerialNumber({deviceID: device.ID});	if (!result.success) {		result.deviceID = device.ID;		return result;	}		result = spark.queueCommand(device.sparkCoreID, 'run_brevitest');	result.success = (result.status === 200) && (result.response.return_value === 1);		return result;};model.Test.methods.start.scope = 'public';