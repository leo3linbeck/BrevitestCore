var L3 = L3 || {};var sparkCoreID = '53ff6e066667574844262367';var accessToken = 'd050d3f69e0b4107f477e9cadb581e43d3f33340';var sparkURL = "https://api.spark.io/v1/";L3.get = function get(url, token) {    var result = {        'status': null,        'response': null    };        var xhr = new XMLHttpRequest();        xhr.open('GET', url);    xhr.setRequestHeader('Authorization', 'Bearer ' + token);    xhr.setRequestHeader('Content-Type', 'application/json');    xhr.onreadystatechange = function() {        if (this.readyState == 4) {            result.status = this.status;            var contentType = this.getResponseHeader('Content-Type');            if (contentType && contentType.indexOf('application/json') !== -1) {                result.response = JSON.parse(this.responseText);            }            else {                result.response = this.responseText;            }        }    };        try {        xhr.send();    }    catch (e) {        console.log('XHR GET failed: ' + JSON.stringify(e));    }    return result;};L3.post = function post(url, token, body) {    var result = {        'status': null,        'response': null    };        var xhr = new XMLHttpRequest();        //	var header = getAuthorizationHeader(); //if necessary    xhr.open('POST', url);    //	xhr.setRequestHeader('Authorization', header);    xhr.setRequestHeader('Authorization', 'Bearer ' + token);    xhr.setRequestHeader('Content-Type', 'application/json');    xhr.onreadystatechange = function() {        if (this.readyState == 4) {            result.status = this.status;            if (result.status !== 0) {                var contentType = this.getResponseHeader('Content-Type');	            if (contentType && contentType.indexOf('application/json') !== -1) {	                result.response = JSON.parse(this.responseText);	            }	            else {	                result.response = this.responseText;	            }            }        }    };        try {    	if (typeof body === 'object') {	        xhr.send(JSON.stringify(body));    	}    	else {	        xhr.send(body);	    }    }    catch (e) {        console.log('XHR POST failed: ' + JSON.stringify(e));    }    return result;};L3.writeSerialNumber = function writeSerialNumber(coreID, serialNumber) {    var result = L3.post(sparkURL + 'devices/' + coreID + '/write_serial', accessToken, { args: serialNumber });    return ({    	success: result && result.response && result.response.return_value === 0,    	result: result	});};L3.readSerialNumber = function readSerialNumber(coreID) {    var result = L3.get(sparkURL + 'devices/' + coreID + '/serialnumber', accessToken);    return ({		serialNumber: result.response.result,		result: result	});};// we build the following object to display the responses in the code editorstatusLine = L3.writeSerialNumber(sparkCoreID, 'OBAD-BWUG-NCPA-WIAF');//statusLine = L3.readSerialNumber(sparkCoreID);(statusLine);