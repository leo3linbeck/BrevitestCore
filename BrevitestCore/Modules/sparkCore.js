var L3 = require('L3');var secrets = require('secrets');var sparkURL = "https://api.spark.io/v1/";function getAccessToken(coreID) {	var rightNow = new Date();		if (!coreID) {		return null;	}		var device = ds.Device.find('sparkCoreID === :1', coreID);	if (device === null) {		return null;	}		if (!device.tokenExpiry || device.tokenExpiry < rightNow) {		result = L3.oauth('https://api.spark.io/oauth/token', 'spark', 'spark', secrets.sparkUsername, secrets.sparkPassword);					device.bearerToken = result.response.access_token;		rightNow.setTime(rightNow.getTime() + result.response.expires_in - 60000);		device.tokenExpiry = rightNow;		device.save();	}		return device.bearerToken;};function validateCartridge(coreID, accessToken) {    var result = L3.post(sparkURL + 'devices/' + coreID + '/validate', accessToken);    return ({		qrCodeImage: result.response ? result.response.result : null,		result: result	});}exports.writeSerialNumber = function writeSerialNumber(coreID, serialNumber) {	var accessToken, result;		accessToken = getAccessToken(coreID);	if (accessToken == null) {	    return ({	    	success: false,	    	result: 'Unable to obtain access token'		});	}	else {		result = L3.post(sparkURL + 'devices/' + coreID + '/write_serial', accessToken, { args: serialNumber });	    return ({	    	success: result && result.response && result.response.return_value === 0,	    	result: result		});	}};exports.readSerialNumber = function readSerialNumber(coreID) {	var accessToken, result;		accessToken = getAccessToken(coreID);	if (accessToken == null) {	    return ({	    	success: false,	    	result: 'Unable to obtain access token'		});	}	else {    	result = L3.get(sparkURL + 'devices/' + coreID + '/serialnumber', accessToken);	    return ({			serialNumber: result.response ? result.response.result : null,			result: result		});	}};exports.runBrevitest = function runBrevitest(coreID) {	var accessToken, result;		accessToken = getAccessToken(coreID);	if (accessToken == null) {	    return ({	    	success: false,	    	result: 'Unable to obtain access token'		});	}	else {		result = validateCartridge(coreID, accessToken);		if (!result.success) {			return result;		}		else {		    result = L3.post(sparkURL + 'devices/' + coreID + '/run', accessToken);		    return ({				testID: result.response ? result.response.result : null,				result: result			});		}	}};