var L3 = require('L3');var spark = require('sparkCore');var capLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';function verifySerialNumberFormat(sn) {    if (sn.length != 19) {		response.statusCode = 400;		return 'Serial number must be 19 characters, not ' + sn.length + '.';    }    for (i = 0; i < 19; i += 1) {        if (i == 4 || i == 9 || i == 14) {            if (sn.charAt(i) != '-') {				response.statusCode = 400;				return 'Serial number error: dash expected at position ' + (i + 1) + '.';            }        }        else {            if (capLetters.indexOf(sn.charAt(i)) == -1) {				response.statusCode = 400;				return 'Serial number error: non-capital-letter character at position ' + (i + 1) + '.';            }        }    }        return '';}function closeDeviceHandler(request, response) {	debugger;	var cartridge, cartridgeUUID, device, res, sn, str;		str = request.urlQuery;	if (str.substring(0,3) === 'sn=') {		sn = str.slice(3);		res = verifySerialNumberFormat(sn);		if (res !== '') {			response.statusCode = 400;			return res;	    }		device = ds.Device.find('serialNumber === :1', sn);		if (device === null) {			response.statusCode = 500;			return 'No device found with serial number ' + sn + '.';		}				res = spark.validateCartridge(device.sparkCoreID);		if (res.qrCodeImage === null) {			response.statusCode = 500;			return 'Cartridge invalid. Assay not run.';		}		else {			cartridgeUUID = L3.qrImage2Code(res.qrCodeImage);			cartridge = ds.Cartridge.find('serialNumber === :1', cartridgeUUID);			if (cartridge === null) {				response.statusCode = 500;				return 'Cartridge not found. Assay not run.';			}			else {				//				// check here to make sure cartridge belongs to practice that owns the device				//				res = spark.runBrevitest(device.sparkCoreID);				if (res.testID === null) {					response.statusCode = 500;					return 'Assay failure.';				}				else {									}			}		}	}		else {		response.statusCode = 400;		return 'Serial number not in URL query string.';	}		return 'Assay complete.';	}